pipeline{
    agent{
        kubernetes{
            yaml '''
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: maven
    image: maven:3-openjdk-17
    command:
    - sleep
    args:
    - infinity
  - name: git
    image: alpine/git
    command:
    - sleep
    args:
    - infinity
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    command:
    - sleep
    args:
    - infinity
    volumeMounts:
    - name: registry-credentials
      mountPath: /kaniko/.docker
  volumes:
  - name: registry-credentials
    secret:
      secretName: regcred
      items:
      - key: .dockerconfigjson
        path: config.json
            '''
        }
    }

    stages{
        stage('maven-checkout'){
            steps{
                container('maven'){
                    git branch: 'main', url:'https://github.com/kshun1207/spring-example.git'
                }
            }
        }
        stage('maven-build'){
            steps{
                container('maven'){
                    sh 'mvn package -DskipTests=true'
                }
            }
        }
        stage('maven-test'){
            steps{
                container('maven'){
                    sh 'mvn test'
                }
            }
        }
        stage('image build, tag, push to docker hub'){
            steps{
                container('kaniko'){
                    sh 'executor --context=dir://$WORKSPACE --destination=kshun1207/mytomcat:$BUILD_NUMBER --destination=kshun1207/mytomcat:latest'
                }
            }
        }
        stage('Update k8s menifest and push'){
            environment{
                githubUser = 'kshun1207' //Ryan Jang 
                githubEmail = 'kshun1207@naver.com' //c1t1d0s7@example.com 
                githubId = 'kshun1207' //c1t1d0s7  
                githubRepo = 'test-argocd' //jenkins-kube-deploy 
                githubURL = "https://github.com/${githubId}/${githubRepo}.git" 
                dockerhubId = 'kshun1207' //c1t1d0s7 
                dockerhubRepo = 'mytomcat' //hello-world
            }
            steps{
                container('git'){
                    git branch: 'main', credentialsId: 'github-credential', url: "${githubURL}" 
                    sh "git config --global --add safe.directory ${workspace}"
                    sh "git config --global --add user.name ${githubUser}"
                    sh "git config --global --add user.email ${githubEmail}"
                    sh 'sed -i "s/image:.*/image: ${dockerhubId}\\/${dockerhubRepo}:${BUILD_NUMBER}/g" deployment.yaml'
                    sh 'git add deployment.yaml'
                    sh 'git commit -m "jenkins build number -> ${BUILD_NUMBER}"'
                    withCredentials([gitUsernamePassword(credentialId: 'github-credential', gitTooName: 'Default')]){
                        sh 'git push --set-upstream origin'
                    }
                }
            }
        }
    }
}